---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';

// Client-side redirect if no token
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title="Admin Dashboard" description={SITE_DESCRIPTION} />
    <style>
      .admin-form {
        max-width: 800px;
        margin: 0 auto;
        padding: 2rem;
      }
      .form-group {
        margin-bottom: 1.5rem;
      }
      label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: bold;
      }
      input[type="text"],
      input[type="url"],
      textarea {
        width: 100%;
        padding: 0.5rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1rem;
      }
      textarea {
        height: 200px;
      }
      button {
        background-color: var(--accent);
        color: white;
        padding: 0.5rem 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
      }
      button:hover {
        background-color: var(--accent-dark);
      }
      .error {
        color: red;
        margin-top: 0.5rem;
      }
      .success {
        color: green;
        margin-top: 0.5rem;
      }
      #imagePreview {
        max-width: 300px;
        margin-top: 1rem;
      }
      .logout-btn {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background-color: #dc3545;
      }
    </style>
  </head>
  <body>
    <Header />
    <button class="logout-btn" onclick="logout()">Logout</button>
    <main>
      <div class="admin-form">
        <h1>Add New Blog Post</h1>
        <form id="blogForm">
          <div class="form-group">
            <label for="title">Title</label>
            <input type="text" id="title" name="title" required />
          </div>
          
          <div class="form-group">
            <label for="description">Description</label>
            <textarea id="description" name="description" required></textarea>
          </div>
          
          <div class="form-group">
            <label for="image">Image</label>
            <input type="file" id="image" name="image" accept="image/*" required />
            <img id="imagePreview" style="display: none;" />
          </div>
          
          <button type="submit">Create Blog Post</button>
          <div id="message"></div>
        </form>
      </div>
    </main>
    <Footer />

    <script>
      // Check authentication on page load
      if (!document.cookie.includes('token=')) {
        window.location.href = '/admin/login';
      }

      const form = document.getElementById('blogForm');
      const message = document.getElementById('message');
      const imageInput = document.getElementById('image');
      const imagePreview = document.getElementById('imagePreview');

      // Image preview
      imageInput.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = (e) => {
            imagePreview.src = e.target.result;
            imagePreview.style.display = 'block';
          };
          reader.readAsDataURL(file);
        }
      });

      // Form submission
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData();
        formData.append('title', form.title.value);
        formData.append('description', form.description.value);
        formData.append('image', form.image.files[0]);

        try {
          const token = document.cookie
            .split('; ')
            .find(row => row.startsWith('token='))
            ?.split('=')[1];

          const response = await fetch('/api/blogs', {
            method: 'POST',
            headers: {
              'Authorization': `Bearer ${token}`
            },
            body: formData,
          });

          if (response.ok) {
            message.textContent = 'Blog post created successfully!';
            message.className = 'success';
            form.reset();
            imagePreview.style.display = 'none';
          } else {
            const error = await response.text();
            throw new Error(error);
          }
        } catch (error) {
          message.textContent = `Error: ${error.message}`;
          message.className = 'error';
        }
      });

      // Logout function
      function logout() {
        document.cookie = 'token=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT';
        window.location.href = '/admin/login';
      }
    </script>
  </body>
</html>